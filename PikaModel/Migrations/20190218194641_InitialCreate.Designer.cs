// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PikaModel.Models;

namespace PikaModel.Migrations
{
    [DbContext(typeof(PikabuContext))]
    [Migration("20190218194641_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PikaModel.Models.Comment", b =>
                {
                    b.Property<long>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20)");

                    b.Property<long?>("CommentContentId")
                        .HasColumnType("bigint(20)");

                    b.Property<DateTime>("DateTimeUtc");

                    b.Property<long>("ParentId")
                        .HasColumnType("bigint(20)");

                    b.Property<int?>("Rating")
                        .HasColumnType("int(11)");

                    b.Property<int>("StoryId")
                        .HasColumnType("int(11)");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(100)");

                    b.HasKey("CommentId")
                        .HasName("PRIMARY");

                    b.HasIndex("CommentContentId");

                    b.HasIndex("DateTimeUtc");

                    b.HasIndex("StoryId");

                    b.HasIndex("UserName");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("PikaModel.Models.CommentContent", b =>
                {
                    b.Property<long>("CommentContentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20)");

                    b.Property<string>("BodyHtml")
                        .HasColumnType("longtext");

                    b.HasKey("CommentContentId")
                        .HasName("PRIMARY");

                    b.ToTable("CommentContents");
                });

            modelBuilder.Entity("PikaModel.Models.FetcherStat", b =>
                {
                    b.Property<string>("FetcherName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)");

                    b.Property<double>("StoriesPerSecondForLastHour");

                    b.Property<double>("StoriesPerSecondForLastMinute");

                    b.HasKey("FetcherName")
                        .HasName("PRIMARY");

                    b.ToTable("FetcherStats");
                });

            modelBuilder.Entity("PikaModel.Models.Story", b =>
                {
                    b.Property<int>("StoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("Author")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateTimeUtc");

                    b.Property<DateTime>("LastScanUtc");

                    b.Property<int?>("Rating")
                        .HasColumnType("int(11)");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("StoryId")
                        .HasName("PRIMARY");

                    b.ToTable("Stories");
                });

            modelBuilder.Entity("PikaModel.Models.User", b =>
                {
                    b.Property<string>("UserName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("longtext");

                    b.HasKey("UserName")
                        .HasName("PRIMARY");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PikaModel.Models.Comment", b =>
                {
                    b.HasOne("PikaModel.Models.CommentContent", "CommentContent")
                        .WithMany("Comments")
                        .HasForeignKey("CommentContentId");

                    b.HasOne("PikaModel.Models.Story", "Story")
                        .WithMany("Comments")
                        .HasForeignKey("StoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PikaModel.Models.User", "UserNameNavigation")
                        .WithMany("Comments")
                        .HasForeignKey("UserName");
                });
#pragma warning restore 612, 618
        }
    }
}
